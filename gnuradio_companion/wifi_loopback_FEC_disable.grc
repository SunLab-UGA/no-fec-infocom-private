options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: Custom
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: wifi_loopback
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 12]
    rotation: 0
    state: enabled

blocks:
- name: chan_est
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    label0: ''
    label1: ''
    label2: ''
    label3: ''
    label4: ''
    labels: '["LS", "LMS", "Linear Comb", "STA"]'
    num_opts: '0'
    option0: '0'
    option1: '1'
    option2: '2'
    option3: '3'
    option4: '4'
    options: '[0, 1, 2, 3]'
    orient: Qt.QVBoxLayout
    type: int
    value: '0'
    widget: radio_buttons
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 12.0]
    rotation: 0
    state: enabled
- name: encoding
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: 0,1,1,1
    label: ''
    label0: ''
    label1: ''
    label2: ''
    label3: ''
    label4: ''
    labels: '["BPSK 1/2", "BPSK 3/4", "QPSK 1/2", "QPSK 3/4", "16QAM 1/2", "16QAM
      3/4", "64QAM 2/3", "64QAM 3/4"]'
    num_opts: '0'
    option0: '0'
    option1: '1'
    option2: '2'
    option3: '3'
    option4: '4'
    options: '[0, 1, 2, 3, 4, 5, 6, 7]'
    orient: Qt.QHBoxLayout
    type: int
    value: '0'
    widget: combo_box
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 8]
    rotation: 0
    state: enabled
- name: epsilon
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 3,1,1,1
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: -20e-6
    step: 1e-6
    stop: 20e-6
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 8]
    rotation: 0
    state: enabled
- name: interval
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 2,1,1,1
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '10'
    step: '1'
    stop: '1000'
    value: '1000'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 8]
    rotation: 0
    state: enabled
- name: noise
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 4,0,1,1
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.1'
    stop: '1'
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1064, 12.0]
    rotation: 0
    state: enabled
- name: out_buf_size
  id: variable
  parameters:
    comment: ''
    value: '96000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 76]
    rotation: 0
    state: enabled
- name: pdu_length
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 3,0,1,1
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: '1500'
    value: '64'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 8]
    rotation: 0
    state: enabled
- name: snr
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 2,0,1,1
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '-15'
    step: '0.1'
    stop: '30'
    value: '30'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [936, 8]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_0
  id: blocks_complex_to_mag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '52'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 748.0]
    rotation: 0
    state: disabled
- name: blocks_ctrlport_monitor_performance_0
  id: blocks_ctrlport_monitor_performance
  parameters:
    alias: ''
    comment: ''
    en: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 156.0]
    rotation: 0
    state: disabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /tmp/wifi.bin
    type: byte
    unbuffered: 'True'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [128, 436.0]
    rotation: 180
    state: disabled
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1752, 368.0]
    rotation: 0
    state: enabled
- name: blocks_message_strobe_0
  id: blocks_message_strobe
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msg: pmt.intern("".join("p" for i in range(pdu_length)))
    period: interval
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 164.0]
    rotation: 0
    state: disabled
- name: blocks_msgpair_to_var_0_0
  id: blocks_msgpair_to_var
  parameters:
    affinity: ''
    alias: ''
    comment: 'the GUI will NOT update

      when the value is changed'
    target: snr
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 20.0]
    rotation: 0
    state: true
- name: blocks_msgpair_to_var_0_0_0
  id: blocks_msgpair_to_var
  parameters:
    affinity: ''
    alias: ''
    comment: 'the GUI will NOT update

      when the value is changed'
    target: epsilon
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 108.0]
    rotation: 0
    state: true
- name: blocks_msgpair_to_var_0_0_0_0
  id: blocks_msgpair_to_var
  parameters:
    affinity: ''
    alias: ''
    comment: 'the GUI will NOT update

      when the value is changed'
    target: encoding
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 196.0]
    rotation: 0
    state: true
- name: blocks_msgpair_to_var_0_0_0_0_0
  id: blocks_msgpair_to_var
  parameters:
    affinity: ''
    alias: ''
    comment: 'the GUI will NOT update

      when the value is changed'
    target: noise
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 284.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_xx_0
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: (10**(snr/10.0))**.5
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 692.0]
    rotation: 0
    state: enabled
- name: blocks_tag_debug_0
  id: blocks_tag_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    display: 'True'
    filter: '""'
    name: ''
    num_inputs: '1'
    type: complex
    vlen: '52'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 828.0]
    rotation: 0
    state: disabled
- name: blocks_var_to_msg_0
  id: blocks_var_to_msg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msgname: snr_changed
    target: snr
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328, 364.0]
    rotation: 0
    state: enabled
- name: blocks_var_to_msg_0_0
  id: blocks_var_to_msg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msgname: noise_changed
    target: noise
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328, 532.0]
    rotation: 0
    state: enabled
- name: blocks_var_to_msg_0_0_0
  id: blocks_var_to_msg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msgname: epsilon_changed
    target: epsilon
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328, 420.0]
    rotation: 0
    state: enabled
- name: blocks_var_to_msg_0_0_0_0
  id: blocks_var_to_msg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msgname: encoding_changed
    target: encoding
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328, 476.0]
    rotation: 0
    state: enabled
- name: blocks_vector_to_stream_0
  id: blocks_vector_to_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '52'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 752.0]
    rotation: 0
    state: disabled
- name: channels_channel_model_0
  id: channels_channel_model
  parameters:
    affinity: ''
    alias: ''
    block_tags: 'True'
    comment: ''
    epsilon: '1.0'
    freq_offset: epsilon * 5.89e9 / 10e6
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_voltage: noise
    seed: '0'
    taps: '1.0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 660.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\n\n\nclass blk(gr.basic_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"This block\
      \ looks for a (key . value) pair to filter from a PMT message.\"\"\"\n\n   \
      \ def __init__(self, key=\"\"):  # only default arguments here\n        \"\"\
      \"arguments to this function show up as parameters in GRC\"\"\"\n        gr.basic_block.__init__(\n\
      \            self,\n            name=\"PMT Filter\",   # will show up in GRC\n\
      \            in_sig=[],\n            out_sig=[]\n        )\n        # if an\
      \ attribute with the same name as a parameter is found,\n        # a callback\
      \ is registered (properties work, too).\n        self.PMT_KEY = key\n\n    \
      \    # message input port definition\n        self.in_mess = 'in'\n        self.message_port_register_in(pmt.intern(self.in_mess))\n\
      \        self.set_msg_handler(pmt.intern(self.in_mess), self.handler)\n\n  \
      \      # message output port definition\n        self.out_mess = 'out'\n   \
      \     self.message_port_register_out(pmt.intern(self.out_mess))\n\n    def work(self,\
      \ input_items, output_items):\n        # output_items[0][:] = input_items[0]\
      \ * self.example_param\n        # return len(output_items[0])\n        pass\n\
      \    \n    # def print_all_keys(pmt_dict, prefix=\"\"):\n    #     if pmt.is_dict(pmt_dict):\n\
      \    #         keys = pmt.dict_keys(pmt_dict)\n    #         for key in keys:\n\
      \    #             key_name = pmt.symbol_to_string(key)\n    #             full_key_name\
      \ = prefix + key_name\n    #             print(f\"Key: {full_key_name}\")\n\
      \                \n    #             # Recursively call the function for nested\
      \ dictionaries\n    #             sub_dict = pmt.dict_ref(pmt_dict, key)\n \
      \   #             if pmt.is_dict(sub_dict):\n    #                 # print_all_keys(sub_dict,\
      \ prefix=full_key_name + \".\")\n    #                 pass\n\n    def handler(self,\
      \ msg):\n        '''This is the handler for the message port'''\n        print(f\"\
      PMT FILTER: Received message\")\n        # try to get the value from the message\n\
      \        value = pmt.pmt_to_python.pmt_to_python(msg)\n        # parse the message\
      \ for the key\n        for v in value: # iterate through the message\n     \
      \       # print(f\"value: {v}\")\n            for k in v:\n                #\
      \ print(f\"key: {k}\")\n                if k == self.PMT_KEY:\n            \
      \        value = v[k]\n                    break\n            # if v == self.PMT_KEY:\n\
      \            # value = value[self.PMT_KEY]\n\n        # print(f\"Message: {value}\"\
      )\n        if value is not None:\n            # if the key exists, output it\
      \ as a new message\n            # make new message\n            key = pmt.to_pmt(self.PMT_KEY)\n\
      \            value = pmt.to_pmt(value)\n            msg = pmt.cons(key, value)\n\
      \            # a = pmt.make_dict()\n            # a = pmt.dict_add(a, self.PMT_KEY,\
      \ value)\n            self.message_port_pub(pmt.intern(self.out_mess), msg)\n\
      \        else:\n            print(f\"ERROR: Key {self.PMT_KEY} not found in\
      \ message\")\n        \n\n"
    affinity: ''
    alias: ''
    comment: ''
    key: '''symbols'''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('PMT Filter', 'blk', [('key', "''")], [('in', 'message', 1)], [('out',
      'message', 1)], 'This block looks for a (key . value) pair to filter from a
      PMT message.', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 884.0]
    rotation: 180
    state: disabled
- name: epy_block_1_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\n\n\nclass blk(gr.basic_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"This block\
      \ prints the full contents of a PMT message.\n    WARNING: This block may print\
      \ a lot of data to the terminal, and may slow down GRC.\n    It's generally\
      \ only used to debug the PMT messages\"\"\"\n\n    def __init__(self):  # only\
      \ default arguments here\n        \"\"\"arguments to this function show up as\
      \ parameters in GRC\"\"\"\n        gr.basic_block.__init__(\n            self,\n\
      \            name=\"PMT Finder\",   # will show up in GRC\n            in_sig=[],\n\
      \            out_sig=[]\n        )\n        # if an attribute with the same\
      \ name as a parameter is found,\n        # a callback is registered (properties\
      \ work, too).\n        # self.print_values = print_values\n\n        # message\
      \ input port definition\n        self.in_mess = 'in'\n        self.message_port_register_in(pmt.intern(self.in_mess))\n\
      \        self.set_msg_handler(pmt.intern(self.in_mess), self.handler)\n\n  \
      \      # message output port definition\n        # self.out_mess = 'out'\n \
      \       # self.message_port_register_out(pmt.intern(self.out_mess))\n\n    def\
      \ work(self, input_items, output_items):\n        # output_items[0][:] = input_items[0]\
      \ * self.example_param\n        # return len(output_items[0])\n        pass\n\
      \    \n    # def print_all_keys(pmt_dict, prefix=\"\"):\n    #     if pmt.is_dict(pmt_dict):\n\
      \    #         keys = pmt.dict_keys(pmt_dict)\n    #         for key in keys:\n\
      \    #             key_name = pmt.symbol_to_string(key)\n    #             full_key_name\
      \ = prefix + key_name\n    #             print(f\"Key: {full_key_name}\")\n\
      \                \n    #             # Recursively call the function for nested\
      \ dictionaries\n    #             sub_dict = pmt.dict_ref(pmt_dict, key)\n \
      \   #             if pmt.is_dict(sub_dict):\n    #                 # print_all_keys(sub_dict,\
      \ prefix=full_key_name + \".\")\n    #                 pass\n\n    def handler(self,\
      \ msg):\n        '''This is the handler for the message port'''\n        print(f\"\
      PMT FINDER: Received message\")\n        value = pmt.pmt_to_python.pmt_to_python(msg)\n\
      \        print(f\"Message: {value}\")\n        # print_all_keys(msg)\n     \
      \   \n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: '(''PMT Finder'', ''blk'', [], [(''in'', ''message'', 1)], [], "This
      block prints the full contents of a PMT message.\n    WARNING: This block may
      print a lot of data to the terminal, and may slow down GRC.\n    It''s generally
      only used to debug the PMT messages", [])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 976.0]
    rotation: 180
    state: disabled
- name: foo_packet_pad2_0
  id: foo_packet_pad2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    delay: 'True'
    delay_sec: '0.001'
    maxoutbuf: '0'
    minoutbuf: out_buf_size * 10
    pad_front: '500'
    pad_tail: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 660.0]
    rotation: 0
    state: enabled
- name: foo_wireshark_connector_0
  id: foo_wireshark_connector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    tech: '127'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 444.0]
    rotation: 180
    state: disabled
- name: ieee802_11_extract_csi_0
  id: ieee802_11_extract_csi
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 680.0]
    rotation: 180
    state: disabled
- name: ieee802_11_mac_0
  id: ieee802_11_mac
  parameters:
    affinity: ''
    alias: ''
    bss_mac: '[0xff, 0xff, 0xff, 0xff, 0xff, 0xff]'
    comment: 'BSS = Basic Service Set

      This is the AP ID ???'
    dst_mac: '[0x42, 0x42, 0x42, 0x42, 0x42, 0x42]'
    maxoutbuf: '0'
    minoutbuf: '0'
    src_mac: '[0x23, 0x23, 0x23, 0x23, 0x23, 0x23]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 220.0]
    rotation: 0
    state: enabled
- name: ieee802_11_parse_mac_0
  id: ieee802_11_parse_mac
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'True'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 668.0]
    rotation: 180
    state: enabled
- name: pdu_pdu_to_tagged_stream_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 348.0]
    rotation: 180
    state: true
- name: pfb_arb_resampler_xxx_0
  id: pfb_arb_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    atten: '100'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    nfilts: '32'
    rrate: 1+epsilon
    samp_delay: '0'
    taps: ''
    type: ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248, 668.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: 1,0,1,2
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: 48*10
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [128, 340.0]
    rotation: 180
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'False'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '52'
    srate: '1'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '350'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 732.0]
    rotation: 0
    state: disabled
- name: wifi_phy_hier_0
  id: wifi_phy_hier
  parameters:
    affinity: ''
    alias: ''
    bandwidth: 10e6
    chan_est: ieee802_11.Equalizer(chan_est)
    comment: ''
    encoding: ieee802_11.Encoding(encoding)
    frequency: 5.9e6
    maxoutbuf: '0'
    minoutbuf: '0'
    sensitivity: '0.56'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 364.0]
    rotation: 180
    state: true
- name: zeromq_pub_msg_sink_0
  id: zeromq_pub_msg_sink
  parameters:
    address: tcp://127.0.0.1:60002
    affinity: ''
    alias: ''
    bind: 'True'
    comment: TX_Data
    timeout: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 156.0]
    rotation: 0
    state: true
- name: zeromq_pub_msg_sink_0_0
  id: zeromq_pub_msg_sink
  parameters:
    address: tcp://127.0.0.1:60004
    affinity: ''
    alias: ''
    bind: 'True'
    comment: 'RX_Symbols (as symbols)

      RX_Data (as "")'
    timeout: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 564.0]
    rotation: 180
    state: true
- name: zeromq_pull_msg_source_0
  id: zeromq_pull_msg_source
  parameters:
    address: tcp://127.0.0.1:50000
    affinity: ''
    alias: ''
    bind: 'False'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    timeout: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 12.0]
    rotation: 0
    state: true
- name: zeromq_pull_msg_source_0_0
  id: zeromq_pull_msg_source
  parameters:
    address: tcp://127.0.0.1:50001
    affinity: ''
    alias: ''
    bind: 'False'
    comment: freq offset
    maxoutbuf: '0'
    minoutbuf: '0'
    timeout: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 100.0]
    rotation: 0
    state: true
- name: zeromq_pull_msg_source_0_0_0
  id: zeromq_pull_msg_source
  parameters:
    address: tcp://127.0.0.1:50002
    affinity: ''
    alias: ''
    bind: 'False'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    timeout: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 188.0]
    rotation: 0
    state: true
- name: zeromq_pull_msg_source_0_0_0_0
  id: zeromq_pull_msg_source
  parameters:
    address: tcp://127.0.0.1:50003
    affinity: ''
    alias: ''
    bind: 'False'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    timeout: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 276.0]
    rotation: 0
    state: true
- name: zeromq_pull_msg_source_0_0_0_0_0
  id: zeromq_pull_msg_source
  parameters:
    address: tcp://127.0.0.1:50010
    affinity: ''
    alias: ''
    bind: 'False'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    timeout: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 244.0]
    rotation: 0
    state: enabled

connections:
- [blocks_complex_to_mag_0, '0', blocks_vector_to_stream_0, '0']
- [blocks_message_strobe_0, strobe, ieee802_11_mac_0, app in]
- [blocks_multiply_const_xx_0, '0', channels_channel_model_0, '0']
- [blocks_var_to_msg_0, msgout, blocks_message_debug_0, print]
- [blocks_var_to_msg_0_0, msgout, blocks_message_debug_0, print]
- [blocks_var_to_msg_0_0_0, msgout, blocks_message_debug_0, print]
- [blocks_var_to_msg_0_0_0_0, msgout, blocks_message_debug_0, print]
- [blocks_vector_to_stream_0, '0', qtgui_time_sink_x_0, '0']
- [channels_channel_model_0, '0', pfb_arb_resampler_xxx_0, '0']
- [foo_packet_pad2_0, '0', blocks_multiply_const_xx_0, '0']
- [foo_wireshark_connector_0, '0', blocks_file_sink_0, '0']
- [ieee802_11_extract_csi_0, '0', blocks_complex_to_mag_0, '0']
- [ieee802_11_extract_csi_0, '0', blocks_tag_debug_0, '0']
- [ieee802_11_mac_0, phy out, epy_block_1_0, in]
- [ieee802_11_mac_0, phy out, wifi_phy_hier_0, mac_in]
- [ieee802_11_mac_0, phy out, zeromq_pub_msg_sink_0, in]
- [ieee802_11_parse_mac_0, out, ieee802_11_extract_csi_0, pdu in]
- [pdu_pdu_to_tagged_stream_0, '0', qtgui_const_sink_x_0, '0']
- [pfb_arb_resampler_xxx_0, '0', wifi_phy_hier_0, '0']
- [wifi_phy_hier_0, '0', foo_packet_pad2_0, '0']
- [wifi_phy_hier_0, carrier, pdu_pdu_to_tagged_stream_0, pdus]
- [wifi_phy_hier_0, mac_out, foo_wireshark_connector_0, in]
- [wifi_phy_hier_0, mac_out, ieee802_11_parse_mac_0, in]
- [wifi_phy_hier_0, mac_out, zeromq_pub_msg_sink_0_0, in]
- [zeromq_pull_msg_source_0, out, blocks_msgpair_to_var_0_0, inpair]
- [zeromq_pull_msg_source_0_0, out, blocks_msgpair_to_var_0_0_0, inpair]
- [zeromq_pull_msg_source_0_0_0, out, blocks_msgpair_to_var_0_0_0_0, inpair]
- [zeromq_pull_msg_source_0_0_0_0, out, blocks_msgpair_to_var_0_0_0_0_0, inpair]
- [zeromq_pull_msg_source_0_0_0_0_0, out, ieee802_11_mac_0, app in]

metadata:
  file_format: 1
